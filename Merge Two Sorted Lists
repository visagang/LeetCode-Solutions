# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        if(l1 is None):
            return l2
        elif(l2 is None):
            return l1
        else:
            head=None
            second=None
            cur=None
            while(l1 is not None and l2 is not None):
                if(l1.val<=l2.val):
                    if(head is None):
                        head=ListNode(l1.val)
                        cur=head
                    else:
                        second=ListNode(l1.val)
                        cur.next=second
                        cur=second
                        second=None
                    l1=l1.next
                else:
                    if(head is None):
                        head=ListNode(l2.val)
                        cur=head
                    else:
                        second=ListNode(l2.val)
                        cur.next=second
                        cur=second
                        second=None
                    l2=l2.next
            if(l1 is not None):
                cur.next=l1
            if(l2 is not None):
                cur.next=l2
            return head
