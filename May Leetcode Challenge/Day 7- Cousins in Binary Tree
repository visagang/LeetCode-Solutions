# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isCousins(self, root: TreeNode, x: int, y: int) -> bool:
        ans=[]
        def checking(root,target,depth):
            if(root==None):
                return True
            if(depth==target):
                if(root.left is not None and root.right is not None):
                    if((root.left.val==x and root.right.val==y) or (root.left.val==y and root.right.val==x)):
                        return False
            return (checking(root.left,target,depth+1) and checking(root.right,target,depth+1))
        
        def bt(root,x,ans,depth):
            if(root==None):
                return
            if(root.val==x):
                ans.append(depth)
                return
            bt(root.left,x,ans,depth+1)
            bt(root.right,x,ans,depth+1)
        bt(root,x,ans,1)
        bt(root,y,ans,1)
        if(ans[0]!=ans[1]):
            return False
        return checking(root,ans[0]-1,1)
      
                
            
